test = {   'name': 'q5',
    'points': 1,
    'suites': [   {   'cases': [   {'code': ">>> hey_robot('reset')\nWorld reset to initial state.\n", 'hidden': False, 'locked': False},
                                   {'code': ">>> hey_robot('put a thing on a red thing')\nAlready holding a thing of the right kind.\nPlaced.\n", 'hidden': False, 'locked': False},
                                   {'code': '>>> assert (\'e\', \'a\') in m.valuation[\'on\'], "Was unable to deposit a pyramid on something else."\n', 'hidden': False, 'locked': False},
                                   {'code': ">>> hey_robot('reset')\nWorld reset to initial state.\n", 'hidden': False, 'locked': False},
                                   {'code': ">>> hey_robot('take a green pyramid')\nTaken.\n", 'hidden': False, 'locked': False},
                                   {'code': '>>> assert obj_in_hand == \'c\', "Was unable to take a pyramid."\n', 'hidden': False, 'locked': False},
                                   {'code': ">>> hey_robot('reset')\nWorld reset to initial state.\n", 'hidden': False, 'locked': False},
                                   {   'code': ">>> hey_robot('put a thing on a green pyramid')\nAlready holding a thing of the right kind.\nI cannot see such a place to put anything.\n",
                                       'hidden': False,
                                       'locked': False},
                                   {'code': '>>> assert not whats_on(\'c\'), "Succeeded in putting e on a pyramid."\n', 'hidden': False, 'locked': False}],
                      'scored': True,
                      'setup': '',
                      'teardown': '',
                      'type': 'doctest'}]}
